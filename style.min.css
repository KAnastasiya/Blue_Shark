/*! normalize.css v7.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}.icon--facebook{content:"";width:10px;height:18px;display:inline-block;vertical-align:middle;background:url(sprite.png) no-repeat 0 0}.icon--google{height:16px;background:url(sprite.png) no-repeat -30px 0}.icon--google,.icon--pinterest{content:"";width:16px;display:inline-block;vertical-align:middle}.icon--pinterest{height:20px;background:url(sprite.png) no-repeat -66px 0}.icon--twitter{width:18px;height:15px;background:url(sprite.png) no-repeat -102px 0}.home:after,.icon--arrow,.icon--twitter{content:"";display:inline-block;vertical-align:middle}.home:after,.icon--arrow{width:32px;height:32px;background:url(sprite.png) no-repeat -140px 0}:root{--color-primary:#00aeef;--color-white:#f6eeee;--nav-active-border-width:0;--nav-toggle-icon-top:60px;--nav-toggle-icon-width:35px;--nav-toggle-icon-height:25px;--nav-toggle-line-height:2px;--nav-tablet-min-width:200px;--nav-mobile-font-color:#333030;--nav-mobile-bg-color:#fff}@font-face{font-family:Lato;src:local(LatoLatinRegular),local("LatoLatin-Regular"),url(fonts/LatoLatin-Regular.woff2) format("woff2"),url(fonts/LatoLatin-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:optional;text-rendering:optimizeLegibility}@font-face{font-family:Allema;src:local(Allema),url(fonts/Allema.ttf) format("truetype");font-weight:400;font-style:normal;font-display:optional;text-rendering:optimizeLegibility}html{font-family:Lato,Arial,sans-serif;font-size:14px;box-sizing:border-box}*,:after,:before{box-sizing:inherit}body.in-transition{transition:-webkit-transform 1s ease;transition:transform 1s ease;transition:transform 1s ease,-webkit-transform 1s ease}img{display:block;width:100%;height:100%;max-width:100%;-o-object-fit:cover;object-fit:cover;-o-object-position:0 0;object-position:0 0}p{font-size:1rem;line-height:1.71429;color:#333030;font-weight:400;margin:0}.header,.section{display:grid;grid-template-columns:1fr repeat(2,minmax(auto,45%)) 1fr}@media (min-width:57em){.header,.section{grid-template-columns:1fr repeat(4,minmax(auto,23%)) 1fr}}.btn{font-size:1.28571rem;line-height:1;color:var(--color-white);font-weight:400;text-decoration:none;text-transform:uppercase;display:inline-block;min-width:50px;padding:24px 55px;border:none;background-color:var(--color-primary)}.btn:hover{box-shadow:1px 2px 5px #666;cursor:pointer}.btn:active{box-shadow:inset 1px 1px 2px #666}.btn:focus{outline:2px solid var(--color-white)}.section:not(.home){grid-template-rows:auto auto;padding:90px 0 110px}.section__title{text-align:center;grid-row:1/2;grid-column:2/4}@media (min-width:57em){.section__title{grid-column:3/5}}.section__title h2{font-size:2.57143rem;line-height:1;color:var(--color-primary);font-weight:700;white-space:nowrap;text-transform:uppercase;text-align:center;margin:0 0 20px;position:relative}@media (min-width:57em){.section__title h2{font-size:3.42857rem;line-height:1}}.section__title h2:after{font-size:4.28571rem;line-height:1;content:attr(val);color:#bebbbb;font-weight:700;opacity:.38;white-space:nowrap;text-transform:uppercase;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media (min-width:57em){.section__title h2:after{font-size:5.71429rem;line-height:1}}.section__content{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;grid-row:2/3;grid-column:2/4;padding-top:80px}@media (min-width:57em){.section__content{grid-column:2/6}}.home{background:url(img/home/img/bg.jpg) no-repeat 0 0;background-size:cover;position:relative}.home__content{font-size:1.42857rem;line-height:1.25;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;grid-column:2/4;padding-top:2.4em;padding-bottom:5em}@media (min-width:57em){.home__content{font-size:2.57143rem;line-height:1.11111;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;grid-column:2/6}}.home__content-wrapper{text-align:center}@media (min-width:57em){.home__content-wrapper{text-align:left}}.home__content-wrapper p{color:var(--color-white);font-size:1em;font-weight:300;line-height:inherit}.home__content-wrapper p:last-of-type{color:var(--color-primary);font-size:1.5em;font-weight:700;text-transform:uppercase;margin-bottom:5px}.home__content-wrapper button{font-size:.375em}.home:after{position:absolute;bottom:30px;left:50%;-webkit-transform:translateX(-50%);transform:translateX(-50%)}.header{grid-column:span 4}@media (min-width:57em){.header{grid-column:span 6}}.header__logo{color:var(--color-primary);grid-column:2/3}@media (min-width:57em){.header__logo{grid-column:2/4}}.header__logo h1{font-size:2.14286rem;line-height:1;font-family:Allema;white-space:nowrap;line-height:135px;margin:0}@media (min-width:57em){.header__logo h1{font-size:2.78571rem;line-height:1;line-height:135px}}.header__logo h1 span,.header__nav{color:var(--color-white)}.header__nav{--border-width:0;line-height:135px;text-align:right;grid-column:3/4;position:relative}@media (min-width:57em){.header__nav{grid-column:4/6}}.about__item{-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;margin-bottom:4.3em}@media (min-width:57em){.about__item{-webkit-box-flex:1;-ms-flex:1 1 45%;flex:1 1 45%;max-width:45%}.about__item:nth-last-of-type(-n+2){margin-bottom:0}}.about__item:last-of-type{margin-bottom:0}.about date{color:#333030;font-weight:700;text-transform:uppercase}.about date,.about h3{font-size:2.14286rem;line-height:1.36667}.about h3{color:var(--color-primary);font-weight:400;padding:10px 0;margin:0;position:relative}.about h3:before{content:"";width:50%;height:1px;background-color:var(--color-primary);position:absolute;top:0;left:0}.skills__item{text-align:center}.skills__chart{width:195px;height:195px;border:12px solid var(--color-primary);border-radius:50%;position:relative}.skills__chart p{font-size:3.42857rem;line-height:.85417;color:#636363;font-weight:100;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}.skills h3{font-size:1.71429rem;line-height:1.70833;color:var(--color-primary);font-weight:400;text-transform:uppercase;margin:50px 0 0}.portfolio__item{color:#3d3d3d;text-align:center;-webkit-box-flex:1;-ms-flex:1 1 100%;flex:1 1 100%;margin:0 0 6.4em}@media (min-width:34em){.portfolio__item{-webkit-box-flex:1;-ms-flex:1 1 45%;flex:1 1 45%;max-width:45%}.portfolio__item:nth-last-of-type(-n+2){margin-bottom:0}}@media (min-width:57em){.portfolio__item{-webkit-box-flex:1;-ms-flex:1 1 30%;flex:1 1 30%;max-width:30%}.portfolio__item:nth-last-of-type(-n+3){margin-bottom:0}}.portfolio__item:last-of-type{margin-bottom:0}.portfolio__item h4{font-size:1.28571rem;line-height:1;font-weight:700;margin:0 0 16px}.portfolio__item p{font-size:14px;font-weight:500;font-style:italic}.portfolio__item figcaption{padding:40px 0;background-color:#ededed}.portfolio__img{width:100%;height:19.6em}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
